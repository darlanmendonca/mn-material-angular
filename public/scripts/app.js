"use strict";function ApiConfig(RestangularProvider){RestangularProvider.setBaseUrl("https://private-a82ea-samples9.apiary-mock.com")}function AppConfig($locationProvider,$stateProvider){$locationProvider.html5Mode(!0),$stateProvider.state("app",{"abstract":!0,views:{main:{templateUrl:"templates/app.template.html"}}})}function AuthenticationConfig($authProvider){$authProvider.loginUrl="",$authProvider.authHeader="Authorization",$authProvider.tokenType="Bearer",$authProvider.authToken="",$authProvider.storageType="localStorage"}function AuthenticationService($auth){this.login=function(user){return $auth.login(user)},this.logout=function(){return $auth.logout()},this.status=function(){return $auth.isAuthenticated()},this.user=function(){return $auth.getPayload()}}function loadingConfig(cfpLoadingBarProvider){cfpLoadingBarProvider.includeSpinner=!1,cfpLoadingBarProvider.includeBar=!0}function LoginConfig($stateProvider){$stateProvider.state("login",{url:"/login",views:{main:{templateUrl:"templates/login.template.html",controller:"LoginController",controllerAs:"login"}}})}function LoginController(AuthenticationService,$state){function authenticate(){function redirectToHome(){$state.go("app.home")}AuthenticationService.login(this.credentials).then(redirectToHome)}var username=void 0,password=void 0;this.credentials={username:username,password:password},this.authenticate=authenticate}function LoginRun($rootScope,$state,AuthenticationService){function requireAuthentication(event,toState){toState.name.startsWith("app."),AuthenticationService.status();return!1}$rootScope.$on("$stateChangeStart",requireAuthentication)}function PromisesConfig($qProvider){$qProvider.errorOnUnhandledRejections(!1)}function SidenavToggleDirective(){function link(scope,button){function toggle(){document.querySelector(".sidenav").classList.toggle("visible")}button.on("click",toggle)}return{restrict:"A",link:link}}function HomeConfig($stateProvider){$stateProvider.state("app.users",{url:"/",views:{"content@app":{templateUrl:"templates/users-list.template.html",controller:"UsersController",controllerAs:"users",resolve:{list:function(Users){return Users.list()}}}}})}function UsersController(list){this.list=list}function UsersService(Restangular){function list(){return resource.getList()}var resource=Restangular.all("users");this.list=list}angular.module("mn-material-angular",["ui.router","satellizer","mn-form","mn-input","ngAnimate","restangular","angular-loading-bar"]),ApiConfig.$inject=["RestangularProvider"],angular.module("mn-material-angular").config(ApiConfig),AppConfig.$inject=["$locationProvider","$stateProvider"],angular.module("mn-material-angular").config(AppConfig),AuthenticationConfig.$inject=["$authProvider"],angular.module("mn-material-angular").config(AuthenticationConfig),AuthenticationService.$inject=["$auth"],angular.module("mn-material-angular").service("AuthenticationService",AuthenticationService),loadingConfig.$inject=["cfpLoadingBarProvider"],angular.module("mn-material-angular").config(loadingConfig),LoginConfig.$inject=["$stateProvider"],angular.module("mn-material-angular").config(LoginConfig),LoginController.$inject=["AuthenticationService","$state"],angular.module("mn-material-angular").controller("LoginController",LoginController),LoginRun.$inject=["$rootScope","$state","AuthenticationService"],angular.module("mn-material-angular").run(LoginRun),PromisesConfig.$inject=["$qProvider"],angular.module("mn-material-angular").config(PromisesConfig),angular.module("mn-material-angular").directive("sidenavToggle",SidenavToggleDirective),HomeConfig.$inject=["$stateProvider"],angular.module("mn-material-angular").config(HomeConfig),UsersController.$inject=["list"],angular.module("mn-material-angular").controller("UsersController",UsersController),UsersService.$inject=["Restangular"],angular.module("mn-material-angular").service("Users",UsersService);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
